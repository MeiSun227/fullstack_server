{"version":3,"sources":["services/persons.js","app.js","index.js"],"names":["baseUrl","axios","get","personObject","post","id","delete","newObject","put","Person","props","person","name","number","onClick","handleDelete","Persons","person_components","persons","map","key","PersonForm","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","search","handleSearchChange","Notification","message","className","ErrorNotification","App","useState","setPersons","setNewName","setNewNumber","setNewSearch","setMessage","errorMessage","setErrorMessage","useEffect","personsService","then","response","data","nameToShow","filter","toUpperCase","includes","showedPersons","onSubmit","event","preventDefault","window","confirm","updatedPerson","console","log","updatePerson","createdPerson","catch","error","setTimeout","target","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86943cca.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = (personObject) => {\r\n    return axios.post(baseUrl, personObject)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    deletePerson: deletePerson,\r\n    update: update\r\n}","import React, { useState, useEffect } from 'react'\r\nimport personsService from './services/persons'\r\nimport './index.css'\r\n\r\nconst Person = (props) => {\r\n  return (\r\n    <p>{props.person.name} {props.person.number} <button onClick={() => { props.handleDelete(props.person) }} >delete</button></p>\r\n\r\n\r\n  )\r\n}\r\n\r\nconst Persons = (props) => {\r\n  const person_components = props.persons.map((person) => <Person key={person.id} person={person} handleDelete={props.handleDelete} />)\r\n  return (\r\n    <>\r\n      {person_components}\r\n    </>\r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleNameChange} />\r\n        <div>number: <input value={props.newNumber} onChange={props.handleNumberChange} /></div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <>\r\n      filter shown name <input value={props.search} onChange={props.handleSearchChange} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"add\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\nconst ErrorNotification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [search, setNewSearch] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personsService\r\n      .getAll()\r\n      .then(response => {\r\n        setPersons(response.data)\r\n      })\r\n  }, [])\r\n\r\n  const createPerson = (persons, name, number) => {\r\n    const personObject = { name: newName, number: newNumber }\r\n    personsService\r\n      .create(personObject)\r\n      .then(createdPerson => {\r\n        personsService\r\n          .getAll()\r\n          .then(response => {\r\n            setPersons(response.data)\r\n            setMessage(\"Added \" + name)\r\n          })\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(error.response.data.error)\r\n      })\r\n    setTimeout(() => {\r\n      setMessage(null)\r\n      setErrorMessage(null)\r\n    }, 2000)\r\n  }\r\n\r\n\r\n  const updatePerson = (persons, name, number) => {\r\n    if (window.confirm(`${name} is already added to the phonebook, replace old number with a new one?`)) {\r\n      let updatedPerson = persons.filter(person => person.name === name)[0]\r\n      updatedPerson.number = number\r\n      personsService\r\n        .update(updatedPerson.id, updatedPerson)\r\n        .then(response => {\r\n          console.log(response)\r\n        })\r\n    }\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const names = persons.map((person) => person.name)\r\n    names.includes(newName) ? updatePerson(persons, newName, newNumber) : createPerson(persons, newName, newNumber)\r\n    setNewName('')\r\n    setNewNumber('')\r\n    setNewSearch('')\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleDeletePerson = (personToDelete) => {\r\n    if (window.confirm(\"Delete \" + personToDelete.name + \"?\")) {\r\n      personsService.deletePerson(personToDelete.id)\r\n        .then(response => {\r\n          personsService\r\n            .getAll()\r\n            .then(response => {\r\n              setPersons(response.data)\r\n            })\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(\"Information of \" + personToDelete.name + \" has already been removed from server\")\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 2000)\r\n\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  const nameToShow = persons.filter(person => person.name.toUpperCase().includes(search.toUpperCase()))\r\n\r\n  const showedPersons = search ? nameToShow : persons\r\n\r\n  const handleSearchChange = (event) => {\r\n\r\n    setNewSearch(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <form onSubmit={addPerson}>\r\n        <Notification message={message} />\r\n        <ErrorNotification message={errorMessage} />\r\n        <Filter handleSearchChange={handleSearchChange} search={search} />\r\n        <h2>add new number</h2>\r\n        <PersonForm handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} newName={newName} newNumber={newNumber} />\r\n      </form>\r\n      <h2>Numbers</h2>\r\n      <Persons persons={showedPersons} handleDelete={handleDeletePerson} />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}